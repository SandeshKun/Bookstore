# Generated by Django 5.2.4 on 2025-07-26 09:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True, help_text='Author biography')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('website', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('address', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('established_year', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Book title', max_length=300)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('isbn_10', models.CharField(blank=True, max_length=10, unique=True)),
                ('isbn_13', models.CharField(blank=True, max_length=13, unique=True)),
                ('description', models.TextField(help_text='Book description/summary')),
                ('table_of_contents', models.TextField(blank=True)),
                ('language', models.CharField(default='English', max_length=50)),
                ('pages', models.PositiveIntegerField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in grams', max_digits=6, null=True)),
                ('dimensions', models.CharField(blank=True, help_text='e.g., 15.2 x 22.9 x 2.5 cm', max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('min_stock_level', models.PositiveIntegerField(default=5, help_text='Reorder when stock reaches this level')),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('edition', models.CharField(blank=True, max_length=50)),
                ('book_format', models.CharField(choices=[('hardcover', 'Hardcover'), ('paperback', 'Paperback'), ('ebook', 'E-book'), ('audiobook', 'Audiobook')], default='paperback', max_length=20)),
                ('status', models.CharField(choices=[('available', 'Available'), ('out_of_stock', 'Out of Stock'), ('discontinued', 'Discontinued'), ('pre_order', 'Pre-order')], default='available', max_length=20)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('cover_image', models.URLField(blank=True, help_text='URL to book cover image')),
                ('sample_pdf', models.URLField(blank=True, help_text='URL to sample PDF')),
                ('featured', models.BooleanField(default=False, help_text='Show on homepage')),
                ('bestseller', models.BooleanField(default=False)),
                ('new_arrival', models.BooleanField(default=False)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('authors', models.ManyToManyField(related_name='books', to='stores.author')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stores.category')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stores.publisher')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField()),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='stores.book')),
            ],
            options={
                'ordering': ['-is_primary', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_name', models.CharField(max_length=100)),
                ('reviewer_email', models.EmailField(max_length=254)),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(max_length=200)),
                ('review_text', models.TextField()),
                ('verified_purchase', models.BooleanField(default=False)),
                ('helpful_votes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='stores.book')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('book', 'reviewer_email')},
            },
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['title'], name='stores_book_title_7966a3_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['isbn_13'], name='stores_book_isbn_13_9afba0_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['status'], name='stores_book_status_3bf52a_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['featured'], name='stores_book_feature_29d0d1_idx'),
        ),
    ]
